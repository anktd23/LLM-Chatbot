Astronomy & Astrophysics manuscript no. ms ©ESO 2023 1st September, 2023 Karhunen–Loève Data Imputation in High Contrast Imaging⋆ Bin B. Ren (任彬) iD ⋆⋆ Université Côte d’Azur, Observatoire de la Côte d’Azur, CNRS, Laboratoire Lagrange, Bd de l’Observatoire, CS 34229, 06304 Nice cedex 4, France; e-mail: bin.ren@oca.eu Received 04 July 2023 / Revised 30 August 2023 / Accepted 31 August 2023 ABSTRACT Detection and characterization of extended structures is a crucial goal in high contrast imaging. However, these structures face chal- lenges in data reduction, leading to over-subtraction from speckles and self-subtraction with most existing methods. Iterative post- processing methods offer promising results, but their integration into existing pipelines is hindered by selective algorithms, high computational cost, and algorithmic regularization. To address this for reference differential imaging (RDI), here we propose the data imputation concept to Karhunen–Loève transform (DIKL) by modifying two steps in the standard Karhunen–Loève image projection (KLIP) method. Specifically, we partition an image to two matrices: an anchor matrix which focuses only on the speckles to obtain the DIKL coefficients, and a boat matrix which focuses on the regions of astrophysical interest for speckle removal using DIKL com- ponents. As an analytical approach, DIKL achieves high-quality results with significantly reduced computational cost (∼3 orders of magnitude less than iterative methods). Being a derivative method of KLIP, DIKL is seamlessly integrable into high contrast imaging pipelines for RDI observations. Key words. (stars:) circumstellar matter – (Galaxies:) quasars: general – techniques: high angular resolution – techniques: image processing – methods: statistical 1. Introduction High contrast imaging aims at detecting and characterizing faint signals surrounding bright central sources (e.g., Oppenheimer & Hinkley 2009; Benisty et al. 2023; Currie et al. 2023). To reach this goal, coronagraphs are used to suppress central light, and post-processing – combined with observational techniques – is implemented to remove residual light and speckles (e.g., Pueyo 2018; Follette 2023). With these setups, existing observational techniques and methods are efficiently detecting and characteriz- ing point sources such as planets and brown dwarfs (e.g., Nielsen et al. 2019; Vigan et al. 2021), as well as circumstellar disks and quasar host galaxies in polarized light (e.g., Benisty et al. 2023; Gratadour et al. 2015). Total intensity detection for ex- tended structures, however, is still prone to data reduction arti- facts with most existing methods for ground-based observations (e.g., Ruane et al. 2019; Xie et al. 2022). Their characterization is limited by compromised data quality (e.g., Milli et al. 2012; Mazoyer et al. 2020; Olofsson et al. 2023; Xie et al. 2023). To detect and characterize extended structures in total inten- sity, several statistics-based methods and their derivative meth- ods are being used (e.g., Lafrenière et al. 2007; Soummer et al. 2012; Amara & Quanz 2012; Ren et al. 2018, 2020; Pairet et al. 2018, 2021; Flasseur et al. 2021; Samland et al. 2021; Juillard et al. 2022; Berdeu et al. 2022). Nevertheless, these methods are either prone to severe overfitting that can alter the morphology and surface brightness of such structures (e.g., Lafrenière et al. 2007; Soummer et al. 2012), or being highly selective on ref- erence regions and computationally intensive (e.g., Ren et al. ⋆ FITS images are only available at the CDS via anonymous ftp to cdsarc.cds.unistra.fr (130.79.128.5) or via https:// cdsarc.cds.unistra.fr/viz-bin/cat/J/A+A/ ⋆⋆ Marie Skłodowska-Curie Fellow 2018, 2020), or subject to regularization terms that may provide uncertain results on the morphology and surface brightness of extended structures (e.g., Flasseur et al. 2021; Pairet et al. 2021; Juillard et al. 2022). Meanwhile, a careful selection of data re- duction regions (e.g., Galicher & Marois 2011; Milli et al. 2012, 2017; Perrin et al. 2015) could provide better results than non- statistical methods, yet these regions need to be adjusted for dif- ferent systems, and such a selection is challenging when the disk morphology is face-on, complex, or even unknown. Using non- negative matrix factorization (NMF: Lee & Seung 2001), Ren et al. (2020) showed that data imputation with sequential NMF (DI-sNMF) could be a promising statistical method for simple disk morphology, and it can provide high-quality results with theoretically minimized signal alteration. However, the data im- putation concept has only been applied in Ren et al. (2020) for NMF in high contrast imaging, and it can provide high-quality results only when some strict requirements are satisfied (e.g., Ren et al. 2020; Olofsson et al. 2023; Xie et al. 2023). What is more, DI-sNMF is computationally inefficient due to its iterative nature (e.g., Ren et al. 2018), calling for other analytical methods that can implement the data imputation concept. In high contrast imaging, the principal-component-analysis- based Karhunen–Loève Image Projection (KLIP: Soummer et al. 2012; Amara & Quanz 2012) method is one of the analytical method standards for data reduction. KLIP decomposes refer- ence images into an orthogonal basis through Karhunen–Loève (KL) transform, and it has been included in post-processing pipelines (e.g., Wang et al. 2015; Gomez Gonzalez et al. 2016; Stolker et al. 2019; Lucas & Bottom 2020). It is widely used by surveys on both exoplanets (e.g., Nielsen et al. 2019; Vi- gan et al. 2021) and circumstellar disks (e.g., Esposito et al. 2020; Xie et al. 2022; Cugno et al. 2023; Wallack et al. 2023). Due to its over-fitting nature (e.g., Soummer et al. 2012; Pueyo Article number, page 1 of 7 arXiv:2308.16912v1 [astro-ph.IM] 31 Aug 2023A&A proofs: manuscript no. ms 2016), KLIP encounters difficulty in detecting and character- izing complex and extended structures. While iterative KLIP derivatives (e.g. Pairet et al. 2018; Ginski et al. 2021; Stapper & Ginski 2022) might help alleviate the over-subtraction and self- subtraction in certain observational setups, there are still persis- tent residual signals and self-subtraction artefacts that pose chal- lenges to data interpretation. As a data replacement (i.e., impu- tation) attempt with KLIP, Hunziker et al. (2018) and Xuan et al. (2018) used KLIP-based background subtraction in an interpo- lation approach: first perform KL decomposition, then conduct KLIP while masking out the central regions. However, due to the masking of central regions, the KLIP procedure within were per- formed on a non-orthogonal basis. Such a KLIP treatment can introduce over-fitting, which is manifested as a higher empiri- cal model for the background, and yields negative surrounding regions even before post-processing. Noticing this over-fitting, Xie et al. (2023) thus used DI-sNMF for background removal and post-processing to extract a double-spiraled system to en- able precise spiral motion measurement. After all, a proper data imputation with KLIP would offer a promising way to produce high-quality results with a high computational efficiency. In the upcoming era of Extremely Large Telescopes (ELTs), the reference differential imaging (RDI) observational setup, in- cluding star-hopping (Wahhaj et al. 2021), could likely dominate the observation modes to produce high-quality images of exo- planets, circumstellar disks, and quasar host galaxies (hereafter “astrophysical signals”) in total intensity. In an RDI observation, a reference star (or multiple reference stars), which does not host circumstellar signals, is used to empirically capture the point spread function and speckles of the target star or quasar to reveal the target’s astrophysical surroundings. With large collecting ar- eas (e.g., Gilmozzi & Spyromilio 2007), ELTs can reach high signal-to-noise ratios in a significantly smaller amount of time (e.g., Bowens et al. 2021) than existing telescopes. In compari- son, it might be suboptimal for the classical angular differential imaging (ADI: Marois et al. 2006) observation setup to be de- ployed on ELTs, since ADI requires a sufficient amount of field rotation of the sky for data processing (e.g., Milli et al. 2012; Xuan et al. 2018), yet sky rotation rate is a natural phenomenon that cannot be changed. To reduce and process the ELT data with high fidelity in RDI observations, iteratively methods could be potentially offer the best results. However, these iterative meth- ods might be limited due to their significantly high computa- tional cost than analytical methods, especially when there are high-resolution observations with a large number of datasets. Therefore, an analytical RDI data reduction method is needed to provide high-quality results in an efficient way. In this study, by engineering the mathematical basics for KLIP, we enable it with the data imputation concept (DIKL). By modifying two steps in the standard KLIP procedure, and illustrating the DIKL results, we expect DIKL to be a promis- ing method in RDI data reduction. In comparison with the es- tablished iterative DI-sNMF method which offers high-quality RDI results (e.g., Olofsson et al. 2023; Xie et al. 2023), such modifications allow an analytical data imputation by DIKL. It is computationally more efficient than iterative methods such as DI-sNMF by ∼3 orders of magnitude, and it can provide results with comparable quality as DI-sNMF in RDI datasets. 2. Method In high contrast imaging observations which require the usage of coronagraphs and adaptive optics systems, light signals from a central object (e.g., star, quasar) received on the detectors are superimposed on the astrophysical signals (e.g., Pueyo 2018; Follette 2023). The goal of post-processing is to extract the faint astrophysical signals (e.g., exoplanets, circumstellar disk, host galaxy) that are hidden behind these bright signals of non- astrophysical origin (e.g., adaptive optics halo, speckles, thermal background). For simplicity, we refer all these non-astrophysical signals as “speckles” hereafter. For an image which contains as- trophysical signals, we refer it as target t. For a set of images that only contain speckle signals, we refer them as reference images R.1 In post-processing, we use the reference images to obtain the representative features of the speckles, then remove these fea- tures from a target image to reveal astrophysical signals in the residuals. 2.1. Overview of KLIP For a reference image array containing nref ∈ N reference images each with npix ∈ N pixels, we denote the array as R ∈ Rnpix×nref. A column in R contains a reference image that is converted to a one-dimensional column vector (e.g., concatenating all columns of one image). We note that the notations here follow that of statisticians and computer scientists, instead of existing publica- tions by astronomers (e.g., Soummer et al. 2012; Pueyo 2016), to enable an efficient delivery of messages to non-astronomy readers in coding. Specifically, we have the reference array R = �R1, · · · , Rnref �, with Ri = (Ri1, · · · , Rinpix)⊤ for i ∈ {1, · · · , nref} and ⊤ for matrix transpose, where Ri j ∈ R for j ∈ {1, · · · , npix}. For a target image, we can convert it to a column vector t ∈ Rnpix×1. To remove the speckles from the target image, a statistics-based post-processing method first transforms the ref- erence array R to obtain a basis. This basis contains the represen- tative features of the reference array (i.e., components). We then remove the representative features from the target vector. After post-processing, astrophysical signals are expected to reside in the residual image from feature removal. The KLIP algorithm in Soummer et al. (2012) is consisted of two steps: the Karhunen–Loève (KL) transform of the reference matrix R to obtain the KL component basis, and the projection of the target vector t on the KL basis. For KLIP, the columns in both R and t are zero-spatial-mean. To reveal the astrophysi- cal signals, the KLIP projection is then removed from the target image. To distinguish the difference between KLIP and DIKL later in this work, here we denote the reference array for KLIP as matrix R(a) ∈ Rn(a) pix×nref, with n(a) pix ≤ npix allowing for the selec- tion of smaller regions in reference images. Similarly, we denote the target vector as t(a) ∈ Rn(a) pix×1 in KLIP processing. With these notations, we review the KLIP procedure as follows. In the KL transform step, for a reference array R(a), its co- variance matrix Σ(a) = R(a)⊤R(a) ∈ Rn(a) pix×n(a) pix is real symmetric. The spectral decomposition of Σ(a) is Σ(a) = R(a)⊤R(a) = Q(a)D(a)Q(a)⊤, (1) where D(a) = diag{λ(a) 1 , · · · , λ(a) nref} is a diagonal matrix whose di- agonal entries are the eigenvalues of Σ(a) with λ(a) k ≥ λ(a) k+1 > 0, and Q(a) ∈ Rnref×nref is an orthonormal matrix with its columns be- ing the corresponding eigenvectors with Q(a)⊤Q(a) = Q(a)Q(a)⊤ = I. Left multiply Eq. (1) by Q(a)⊤ and right multiply by Q(a), we have [R(a)Q(a)]⊤R(a)Q(a) = Q(a)⊤R(a)⊤R(a)Q(a) = D(a), 1 A target can serve as a reference in scenarios such as ADI, in which astrophysical signals move with respect to speckles in different images. Article number, page 2 of 7Ren: DIKL for High Contrast Imaging 101 102 103 104 (counts pixel 1) Fig. 1. Partitioning of an image for DIKL. (a) An anchor image used to construct KL basis. (b) A boat image used to construct DIKL basis. (c) A complete image without partitioning. Note: the images here are vectorized to constitute the columns of the R(a), R(b), and R matrices, respectively. where we now have diagonalized the covariance matrix. By defining Z(a) = R(a)Q(a), (2) we have an orthogonal KL component basis Z(a) ∈ Rn(a) pix×nref. The columns of the KL basis can be divided by the corresponding square root of the eigenvalues (e.g., Soummer et al. 2012), and thus creating an orthonormal basis Z(a). While we do not adopt this normalization since it does not impact the following target modeling procedure in the datasets used later in this study, such a normalization (e.g., VIP: Gomez Gonzalez et al. 2016) might be necessary for other datasets. In the KL projection step, for a given target image vector with zero-spatial-mean t(a) ∈ Rn(a) pix×1, we can project and remove the KL component to obtain the residual r(a) ∈ Rn(a) pix×1, r(a) = t(a) − Kklip � k=1 c(a) k Z(a) k , (3) where Kklip ∈ {1, · · · , nref} is the cutoff count of the KL compo- nents (Soummer et al. 2012), and c(a) k = t(a)⊤Z(a) k (4) is a scalar with c(a) k ∈ R, which denotes the projection from the target onto the k-th KL component of R(a). In the next step of this study, we will modify the KLIP proce- dure to introduce DIKL post-processing. To perform DIKL data reduction, we need to focus on different regions of the reference array R. For the full reference array R, we can reorder or dupli- cate certain of its rows to obtain two submatrices, � R(a) = S (a)R R(b) = S (b)R , (5) where R(a) ∈ Rn(a) pix×nref, R(b) ∈ Rn(b) pix×nref, with n(a) pix ≤ npix and n(b) pix ≤ npix. Selection matrices S (a) ∈ Bn(a) pix×npix and S (b) ∈ Bn(b) pix×npix are boolean, and they are used to select specific rows in R to form R(a) and R(b), respectively. For example, to select the j-th row from R and store it in the i-th row of R(a), we have S (a) ij = 1 (and S (a) i j = 0 otherwise). To be more informative on the naming con- ventions of the superscripts in Eq. (5), we refer the two selected matrices as an anchor matrix R(a) and a boat matrix R(b). The anchor matrix R(a) covers the regions which only host speckle signals, and the boat matrix R(b) can host astrophysical signals (and it can also contain the anchor matrix, which is adopted in this study), see Fig. 1 for an illustration of the selected regions. 2.2. DIKL for Reference Differential Imaging The DIKL method modifies KLIP in two aspects. Specifically, the DIKL components are constructed by applying the eigenvec- tors from the anchor matrix R(a) to the boat matrix R(b), and the DIKL projection adopts the projection coefficient between an- chor target t(a) and anchor KL basis Z(a). On the one hand, DIKL modifies the KL transform in Eq. (2). The DIKL basis follows Z′(b) = R(b)Q(a), (6) where we now instead use the eigenvectors from R(a) to construct the DIKL basis for R(b) regions. Here we use the prime symbol for the DIKL basis to distinguish it from a normal KL basis for the reference matrix R(b). In comparison, the KL basis for R(b) is Z(b), and it is not calculated nor used in this study. On the other hand, we modify the KL projection in Eq. (3). For a target vector t(b) ∈ Rn(b) pix×1 with zero-spatial-mean, DIKL uses the coefficients from Eq. (4) between t(a) and Z(a), then ap- plies the coefficients to the DIKL basis in Eq. (6). Specifically, the residual image after DIKL projection is r(b) = t(b) − Kklip � k=1 c(a) k Z′(b) k = t(b) − Kklip � k=1 t(a)⊤Z(a) k Z′(b) k = |S (b)t⟩ − Kklip � k=1 ⟨S (a)t|Z(a) k ⟩|Z′(b) k ⟩, (7) where the last equation adopts the bra–ket convention for the purpose of demonstration and connection with existing studies (e.g., Soummer et al. 2012). Article number, page 3 of 7A&A proofs: manuscript no. ms With the above procedure, Eqs. (6) and (7) establish the DIKL post-processing procedure, see Appendix A for a corre- sponding pseudocode and implementation instructions. On the one hand, there is no direct projection of t(b) onto the KL basis of R(b), which ensures the non-overfitting of non-speckle signals for DIKL. On the other hand, the projection coefficient is ob- tained from where speckle-only signals are expected (in both the reference images and the target image). Both ensure that astro- physical signals in the boat regions of t(b) are not captured in the coefficients in Eq. (7), and thus it serves as the data imputation step for DIKL. In fact, DIKL only performs KL transform to the speckles in the anchor matrix in this work, which avoids the high variation of signals in the boat matrix (e.g., regions that are close to the coronagraph) to dominate the classical KL transform (which is performed on the entire image), see Fig. 1. We note that, however, Eq. (6) is limited in the reduction of non-RDI data. For example, in ADI datasets, we need to mask out different pixels in an observation sequence (e.g., Milli et al. 2017; Ren et al. 2020) to focus on speckle-only signals, since angular diversity is used to capture the speckles in an ADI ob- servation sequence. We can indeed calculate an element in the covariance matrix by focusing only on the pixels that are not masked out in a pair of reference images, and perform spectral decomposition in Eq. (1) to obtain the corresponding eigenvec- tors. However, we cannot yet construct a basis following Eq. (2) for KLIP, nor Eq. (6) for DIKL, since weights in the eigenvec- tor matrix Q are assigned to data that are masked out (i.e., ar- tificially “missing”) in the reference array R. To apply DIKL to ADI datasets, we can interpolate the speckle-only signals for the masked out data (e.g., Perrin et al. 2015) or iteratively fill the missing data (e.g., Bailey 2012) in R for Eq. (6), yet such treat- ments beyond the current scope of this analytical study. 3. Application To demonstrate the DIKL method using on-sky RDI data, we re- trieved datasets from the SPHERE instrument at the Very Large Telescope (VLT). We adopted data from IRDIS (Dohlen et al. 2008) of SPHERE in the star-hopping mode (Wahhaj et al. 2021). The star-hopping mode hops between a target star and its reference star during an observation sequence, thus reaching a quasi-simultaneous capture of speckle change. We retrieved the UT 2021-09-06, UT 2022-02-07, and UT 2022-04-01 ob- servations of circumstellar disk hosts – HD 169142, PDS 201, and HD 129590 – as well as their reference stars from pro- grams 105.209E and 105.20GP. We preprocess the data using the IRDAP pipeline (van Holstein et al. 2017, 2020), and the stars are then located at the center of the images. In the IRDIS data, with each IRDIS pixel having a spatial scale of 12.25 mas (Maire et al. 2016), the control ring – interior to which the adaptive optics system can perform optimal dark hole correction to reveal faint objects – spans between 85 pixel and 115 pixel from the matrix centers. For further processing, we masked out the matrix ele- ments that are interior to a radius of 8 pixel from the center. We display the partitioning of an image in Fig. 1 for and illustration of the anchor region and the boat region in this study. For the three groups of IRDIS datasets, the images for post- processing are the central 350 × 350 pixel from the IRDAP pre- processed data. For one exposure, there are two channels from the preprocessed data, and we added them to produce one im- age. There are 128, 32, and 32 target images, with 36, 12, and 32 corresponding reference images, for HD 169142, PDS 201, and HD 129590, respectively. To convert a 2-dimensional image to a column in a matrix for this study, in practice, we created a 2-dimensional binary mask whose entries are 1 when the corre- sponding pixels are selected in Fig. 1(a)(b). For one image, we used the where function in numpy (Harris et al. 2020) to select the pixels in the images, and created a column for the selected matrix. By performing this for all reference images, we created the selected anchor matrix R(a) or the boat matrix R(b) for further post-processing. By performing this once for a target image, we created the selected anchor target vector t(a) or the boat target vector t(b). In post-processing, for the three IRDIS datasets that are in matrix form, we first followed Eq. (1) to perform spectral de- composition of the matrix elements in the anchor matrix (i.e., the IRDIS control ring). We then followed Eq. (6) to conduct DIKL transform on the boat matrix – the entire image (or the matrix elements interior to the outer edge of the control ring for the HD 129590 data) – using the eigenvectors from the covariance matrix of the anchor references. At last, to remove the speckles for a target image, we followed Eq. (7) to perform DIKL reduc- tion, where we adopted the KLIP projection coefficients from Eq. (4) between the anchor target and anchor references. We re- shaped the 1-dimensional vectors to 2-dimensional image, then derotated the reduction results for all target images to north-up and east-left according to their corresponding parallactic angles calculated using Pynpoint (Stolker et al. 2019). We calculated the element-wise median of the derotated reduction results as the combined image. We adopt the median-subtracted combined image as the final result. 3.1. Residual Variance Variance of residual images can be informative of the existence of astrophysical signals. By performing DIKL on the reference images of the HD 169142 dataset, we generated the correspond- ing fractional residual variance (FRV) curves (e.g., Soummer et al. 2012; Ren et al. 2018). Specifically, for a reduced refer- ence image, we divide its variance by that of the corresponding original image to generate the FRV. The FRV curves are then the FRV dependence as a function of KL components. Similarly, we generated the FRV curves for KLIP for comparison. For KLIP, FRV curves are expected to follow the fractional residual eigen- values (Soummer et al. 2012), as can be seen in Fig. 2. The FRV curves of DIKL converge to higher plateaus than those from KLIP. This convergence illustrates the less aggres- sive overfitting (or potentially non-overfitting of data; e.g., NMF: Ren et al. 2018) of DIKL. Similar as NMF, the FRV plateaus with DIKL is the indirect evidence that DIKL can retain more information of non-speckle signals than KLIP. In addition, the FRVs for DIKL reaches to stable values with ≈5 DIKL compo- nents, suggesting that the rest of the components have negligible contribution in the DIKL process. Due to the non-orthogonality of a DIKL basis, we witnessed a minor level of overfitting of the data, and thus we subtracted the median of the DIKL residuals to manually offset this effect. We present in Fig. 3 the correlation matrix for DIKL compo- nents: there exist crosstalks in the form of non-zero off-diagonal elements. However, given that the contribution of higher order DIKL components (≳5) are negligible in the FRVs in Fig. 2, the DIKL crosstalk only impacts the first few components, and the crosstalk does not contribute to data reduction beyond the first ≈5 DIKL components due to the reaching of FRV plateaus in Fig. 2. Article number, page 4 of 7Ren: DIKL for High Contrast Imaging 0 10 20 30 KL component 10 3 10 2 10 1 100 Fractional residual variance DIKL KLIP (theory) KLIP Fig. 2. Fractional residual variance as a function of KL components for RDI. DIKL reaches higher plateaus than KLIP, illustrating the ability of information retention using DIKL. (The data used to create this figure are available in the ancillary folder on arXiv.) 1 2 5 10 20 30 DIKL Component 1 2 5 10 20 30 DIKL Component 1.00 0.75 0.50 0.25 0.00 0.25 0.50 0.75 1.00 Correlation Fig. 3. Correlation matrix of DIKL components. While KL components are mutually orthogonal, most DIKL components are not. However, with the FRVs in Fig. 2 suggesting that only the first ∼5 DIKL compo- nents contributes to the removal of speckles, the crosstalk from higher order components therefore does not impact DIKL data reduction. (The data used to create this figure are available in the ancillary folder on arXiv.) 3.2. DIKL Imaging We used DIKL to reduce the star-hopping RDI observations of HD 169142, PDS 201, and HD 129590, which are known cir- cumstellar disk hosts. The three disks have inclinations from nearly face-on to roughly edge-on (e.g., Pohl et al. 2017; Wagner et al. 2020; Matthews et al. 2017; Olofsson et al. 2023). We also reduced the datasets with KLIP and DI-sNMF for comparison. Between the DIKL and KLIP results in Fig. 4, for the nearly face-on HD 169142, DIKL retrieves a two-ringed system, KLIP can nevertheless only recover the inner ring that is close to the coronagraph with compromised data quality. The DIKL result resembles the disk image obtained in polarized light, which thus demonstrates its superiority over KLIP in conserving face-on structures. Similarly, the PDS 201 and HD 129590 results have fine extended structures only seen in DIKL when compared with KLIP. In comparison, KLIP removes signals from the disks, al- tering disk morphology that poses challenges in data interpreta- tion (e.g., Wagner et al. 2020; Olofsson et al. 2023). 101 102 103 104 (counts pixel 1) Fig. 4. Comparison of reduction results using KLIP (left) and DIKL (right) for nearly face-on to roughly edge-on systems. For HD 169142 (left), PDS 201 (middle), and HD 129590 (right), DIKL reaches data quality that might be comparable with polarized light observations. (The data used to create this figure are available in the ancillary folder on arXiv.) In comparison with the DI-sNMF method, which is mathe- matically well-founded to deliver high-quality results (e.g., Ren et al. 2020; Olofsson et al. 2023; Xie et al. 2023), DIKL can pro- vide satisfactory results in Fig. 5. The DIKL results not only re- semble the morphology of disks from DI-sNMF (Olofsson et al. 2023; Ren et al. 2023), but also agree with the DI-sNMF surface brightness values within ∼10% for the disk-hosting regions. This further shows that DIKL can be a promising method in reaching high-quality results, and with a computational efficiency that is ∼3 orders of magnitude better than DI-sNMF. With the demonstrated superiority of DIKL over the clas- sical KLIP method in Fig. 4, as well as the consistency of its results with the established DI-sNMF method in Fig. 5, DIKL is a promising method that can produce high-quality results us- Article number, page 5 of 7A&A proofs: manuscript no. ms 1.0 0.5 0.0 0.5 1.0 Fig. 5. Validation of DIKL results (top) using DI-sNMF results (mid- dle), with the former method being more computationally efficient than the latter by ∼3 orders of magnitude. The difference between the two methods (bottom), obtained by first subtracting the DI-sNMF result from that of DIKL then divided it by the DI-sNMF result, is ≲10% for the disk signals. (The data used to create this figure are available in the ancillary folder on arXiv.) ing similar amount of calculation time as KLIP. However, given that the DIKL basis being a non-orthogonal basis in practice, we should not yet ascribe full credibility in the fine details of DIKL results for interpretation until its application to datasets from other instruments is validated. Nevertheless, DIKL possesses a distinctive advantage in producing high-quality preliminary out- comes with high computational efficiency as the first step for data analysis. Such datasets with promising results can be then reduced with more advanced methods including DI-sNMF to en- sure signal quality. 4. Summary For RDI data reduction in high-contrast imaging, we demon- strated a high-efficiency and analytical approach to perform data imputation with modified KLIP algorithm: DIKL. Specifically, we can modify two steps in KLIP to reach the purpose of data imputation. On the one hand, in component construction, we use the eigenvectors of the covariance matrix – from the regions which only host speckle signals (i.e., the anchor matrix, “a”) – to generate the DIKL basis for the regions hosting non-speckle signals (i.e., the boat matrix, “b”), see Eq. (6). On the other hand, in speckle removal, we adopt the coefficients from capturing the speckles in the anchor matrix, and apply them to the DIKL basis and thus capture the speckles for the regions that host astrophys- ical signals in the boat matrix, see Eq. (7). With the two modi- fications, we only need to perform spectral decomposition once in Eq. (1). What is more, the corresponding covariance matrix for the anchor matrix is faster to compute than KLIP, due to a re- duced number of matrix elements. As a result, the computational complexity of DIKL is similar as or less than that of KLIP. By avoiding the projection of astrophysical signals onto speckle features, DIKL can recover face-on structures that are normally overfit in RDI observations, see Fig. 4. On the one hand, in comparison with the mathematically well-founded it- erative DI-sNMF method in Ren et al. (2020), DIKL might po- tentially provide analytical results of low quality due to the non- orthogonal DIKL basis in Eq. (6). However, DIKL can approach a data quality similar to that of the latter in Fig. 5, since the crosstalk of the DIKL basis is negligible for higher order terms in Figs. 2 and 3. On the other hand, in comparison with the Hun- ziker et al. (2018) modification of KLIP, DIKL does not apply KL transform for the regions interior to the control ring while the latter does. Given that KL transform captures the variance of the signals (e.g., Soummer et al. 2012), while high contrast imaging observations have the highest variance next to the coro- nagraph (e.g., Pueyo 2018), the Hunziker et al. (2018) and Xuan et al. (2018) approach should not be adopted to realize the data imputation concept for KLIP. In comparison with that approach, DIKL is not sensitive to such variances, since it uses the control ring signals that are less prone to random noise for KL transform, and thus DIKL is theoretically more plausible for data imputa- tion. As a result, DIKL can be a promising analytical method that provides initial results, and with a ∼3 orders of magnitude higher computational efficiency than the existing iterative meth- ods (e.g., Ren et al. 2020). However, due to the crosstalk of DIKL basis, when the reference images are not stable, we recom- mend using DIKL for initial signal detection followed by other iterative data imputation methods for detailed characterization. Given that DIKL is a natural extension of the KLIP algo- rithm, it can be implemented in the existing high-contrast imag- ing packages (e.g., Wang et al. 2015; Gomez Gonzalez et al. 2016; Stolker et al. 2019; Lucas & Bottom 2020) for reference differential imaging data reduction. What is more, DIKL can perform data reduction for images containing negative values (from background removal), and thus it might potentially extract fainter disks than DI-sNMF which only takes in non-negative values. In the upcoming ELT era, we expect DIKL and its fu- ture derivative methods to provide high-quality results with high computational efficiency. Moving forward, on the one hand, we can assign different weights to the pixels in KL transform (e.g., Bailey 2012) to make it less prone to random noise or shot noise. On the other hand, for non-RDI data (e.g., angular differential imaging, spectral differential imaging), more careful derivations which can handle missing data for different regions from differ- ent images, including modifying the covariance matrix for KL transform and the KLIP procedure, are needed in the future. Acknowledgements. We thank the anonymous referee for their suggestions that increased the readability and clarity of this manuscript, Mamadou N’Diaye for discussions, and Chen Xie for discussions on reference differential imaging in the ELT era. Based on observations collected at the European Organisation for Astronomical Research in the Southern Hemisphere under ESO programmes 105.209E and 105.20GP. We thank the PIs for the two programs (M. Benisty and J. Olofsson) for the datasets that validated this study. This research has received funding from the European Union’s Horizon 2020 research and innovation pro- gramme under the Marie Skłodowska-Curie grant agreement No. 101103114. References Amara, A., & Quanz, S. P. 2012, MNRAS, 427, 948 Bailey, S. 2012, PASP, 124, 1015 Benisty, M., Dominik, C., Follette, K., et al. 2023, Astronomical Society of the Pacific Conference Series, 534, 605 Berdeu, A., Langlois, M., & Vachier, F. 2022, A&A, 658, L4 Article number, page 6 of 7Ren: DIKL for High Contrast Imaging Bowens, R., Meyer, M. R., Delacroix, C., et al. 2021, A&A, 653, A8 Cugno, G., Pearce, T. D., Launhardt, R., et al. 2023, A&A, 669, A145 Currie, T., Biller, B., Lagrange, A., et al. 2023, Astronomical Society of the Pacific Conference Series, 534, 799 Dohlen, K., Langlois, M., Saisse, M., et al. 2008, Proc. SPIE, 7014, 70143L Esposito, T. M., Kalas, P., Fitzgerald, M. P., et al. 2020, AJ, 160, 24 Flasseur, O., Thé, S., Denis, L., et al. 2021, A&A, 651, A62 Follette, K. B. 2023, arXiv, arXiv:2308.01354 Galicher, R., & Marois, C. 2011, P25 Gilmozzi, R., & Spyromilio, J. 2007, The Messenger, 127, 11 Ginski, C., Facchini, S., Huang, J., et al. 2021, ApJ, 908, L25 Gomez Gonzalez, C. A., Wertz, O., Christiaens, V., et al. 2016, VIP: Vortex Image Processing pipeline for high-contrast direct imaging of exoplanets, ASCL, 1603.003 Gratadour, D., Rouan, D., Grosset, L., et al. 2015, A&A, 581, L8 Harris, C. R., Millman, K. J., van der Walt, S. J., et al. 2020, Nature, 585, 357 Hunziker, S., Quanz, S. P., Amara, A., & Meyer, M. R. 2018, A&A, 611, A23 Juillard, S., Christiaens, V., & Absil, O. 2022, A&A, 668, A125 Lafrenière, D., Marois, C., Doyon, R., et al. 2007, ApJ, 660, 770 Lee, D. D., & Seung, H. S. 2001, in Advances in Neural Information Processing Systems 13, ed. T. K. Leen, T. G. Dietterich, & V. Tresp (MIT Press), 556 Lucas, M., & Bottom, M. 2020, JOSS, 5, 2843 Maire, A.-L., Langlois, M., Dohlen, K., et al. 2016, Proc. SPIE, 9908, 990834 Marois, C., Lafrenière, D., Doyon, R., et al. 2006, ApJ, 641, 556 Matthews, E., Hinkley, S., Vigan, A., et al. 2017, ApJ, 843, L12 Mazoyer, J., Arriaga, P., Hom, J., et al. 2020, Proc. SPIE, 11447, 1144759 Milli, J., Mouillet, D., Lagrange, A. M., et al. 2012, A&A, 545, A111 Milli, J., Vigan, A., Mouillet, D., et al. 2017, A&A, 599, A108 Nielsen, E. L., De Rosa, R. J., Macintosh, B., et al. 2019, AJ, 158, 13 Olofsson, J., Thébault, P., Bayo, A., et al. 2023, A&A, 674, A84 Oppenheimer, B. R., & Hinkley, S. 2009, ARA&A, 47, 253 Pairet, B., Cantalloube, F., & Jacques, L. 2018, arXiv, arXiv:1812.01333 —. 2021, MNRAS, 503, 3724 Perrin, M. D., Duchene, G., Millar-Blanchaer, M., et al. 2015, ApJ, 799, 182 Pohl, A., Benisty, M., Pinilla, P., et al. 2017, ApJ, 850, 52 Pueyo, L. 2016, ApJ, 824, 117 —. 2018, Direct Imaging as a Detection Technique for Exoplanets, 10 Ren, B., Benisty, M., Ginksi, C., et al. 2023, A&A, under review Ren, B., Pueyo, L., Chen, C., et al. 2020, ApJ, 892, 74 Ren, B., Pueyo, L., Zhu, G. B., et al. 2018, ApJ, 852, 104 Ruane, G., Ngo, H., Mawet, D., et al. 2019, AJ, 157, 118 Samland, M., Bouwman, J., Hogg, D. W., et al. 2021, A&A, 646, A24 Soummer, R., Pueyo, L., & Larkin, J. 2012, ApJ, 755, L28 Stapper, L. M., & Ginski, C. 2022, A&A, 668, A50 Stolker, T., Bonse, M. J., Quanz, S. P., et al. 2019, A&A, 621, A59 van Holstein, R. G., Snik, F., Girard, J. H., et al. 2017, Proc. SPIE, 10400, 1040015 van Holstein, R. G., Girard, J. H., de Boer, J., et al. 2020, A&A, 633, A64 Vigan, A., Fontanive, C., Meyer, M., et al. 2021, A&A, 651, A72 Wagner, K., Stone, J., Dong, R., et al. 2020, AJ, 159, 252 Wahhaj, Z., Milli, J., Romero, C., et al. 2021, A&A, 648, A26 Wallack, N. L., Ruffio, J.-B., Ruane, G., et al. 2023, AJ, accepted Wang, J. J., Ruffio, J.-B., De Rosa, R. J., et al. 2015, pyKLIP: PSF Subtraction for Exoplanets and Disks, ASCL, 1506.001 Xie, C., Choquet, E., Vigan, A., et al. 2022, A&A, 666, A32 Xie, C., Ren, B. B., Dong, R., et al. 2023, A&A, 675, L1 Xuan, W. J., Mawet, D., Ngo, H., et al. 2018, AJ, 156, 156 Appendix A: Pseudocode for DIKL implementation We present a pseudocode to implement DIKL in Algorithm 1. Specifically, we use the KL projection coefficient from Eq. (4), and apply it to the DIKL basis in Eq. (6), to obtain the DIKL projection. We then remove the DIKL projection from the target image to reveal the astrophysical signals in Eq. (7). To implement a standalone DIKL function, we need two ma- trix operations – matrix multiplication and eigendecomposition – both are available in modern scientific programming languages. Alternatively, to implement DIKL in the field of high contrast imaging, we can use existing KLIP frameworks (e.g., pyKLIP: Wang et al. 2015, VIP: Gomez Gonzalez et al. 2016, Pynpoint: Stolker et al. 2019, ADI.jl: Lucas & Bottom 2020), since there are only two additional commands (at the end of Algorithm 1) in Algorithm 1 DIKL algorithm. 1: Input: reference array R, target vector t, anchor selection mask S (a), and boat selection mask S (b); 2: Generate anchors: compute anchor reference R(a) and anchor target t(a) using selection mask S (a); ▷ See Eq. (5). 3: Generate boats: compute boat reference R(b) and boat target t(b) using selection mask S (b); ▷ See Eq. (5). 4: Q(a) ← eigenvectors of R(a)⊤R(a); ▷ See Eq. (1). 5: Z(a) ← R(a)⊤Q(a); ▷ KL transform in Eq. (2). 6: c(a) ← t(a)⊤Z(a); ▷ KL projection in Eq. (4). 7: Z′(b) ← R(b)⊤Q(a); ▷ DIKL transform in Eq. (6). 8: r(b) ← t(b) − c(a)Z′(b); ▷ DIKL projection in Eq. (7). 9: Output: DIKL residual r(b). addition to KLIP for RDI observations. There is one extra com- mand to select specific regions to obtain the anchor and boat ma- trices, and this selection is available using the mask commands in existing frameworks. In actual implementation, we recommend splitting Algo- rithm 1 into two functions for computational efficiency. One function performs KL and DIKL transforms, and returns both the KL basis from Eq. (2) and the DIKL basis from Eq. (6). The other uses the KL basis to generate the KL projection coeffi- cients from Eq. (4) for target t, then apply the coefficients to the DIKL basis to obtain the residuals in Eq. (7). In this way, we can use the same reference array R for the RDI reduction of different targets using DIKL. To implement DIKL on existing high contrast imaging pipelines, we detail the key modifications here. Specifically, in the KL transform we need the eigenvector matrix Q(a) in Eq. (1), and thus such an output is needed when eigendecomposition is conducted (e.g., pyKLIP2, Pynpoint3, and VIP4); for adi.jl5 where singular value decomposition is conducted, we can use the output directly. We can then multiply the boat reference matrix R(b) with the eigenvector matrix to obtain the DIKL basis Z′(b) in Eq. (6). At last, we multiply the KL projection coefficients c(a) from the pipelines for Eq. (4) with the DIKL basis Z′(b), then obtain the residuals in Eq. (7) after DIKL projection. 2 https://bitbucket.org/pyKLIP/pyklip/src/ ab0040da1ae442dce9503502fc92f1736615b37d/pyklip/klip. py#lines-137 3 https://github.com/PynPoint/PynPoint/blob/main/ pynpoint/util/psf.py#L86 4 https://github.com/vortex-exoplanet/VIP/blob/v1.4. 0/vip_hci/psfsub/svd.py#L442C21 5 https://github.com/JuliaHCI/ADI.jl/blob/main/src/ pca.jl#L46 Article number, page 7 of 7